// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API work history ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß
const http = require('http');

function makeRequest(options, data = null) {
    return new Promise((resolve, reject) => {
        const req = http.request(options, (res) => {
            let body = '';
            res.on('data', (chunk) => {
                body += chunk;
            });
            res.on('end', () => {
                try {
                    resolve({
                        statusCode: res.statusCode,
                        data: JSON.parse(body)
                    });
                } catch (error) {
                    resolve({
                        statusCode: res.statusCode,
                        data: body
                    });
                }
            });
        });
        
        req.on('error', reject);
        
        if (data) {
            req.write(JSON.stringify(data));
        }
        req.end();
    });
}

async function testAPI() {
    try {
        console.log('üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô...\n');
        
        // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á user ID 3
        console.log('1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô...');
        const getOptions = {
            hostname: 'localhost',
            port: 5000,
            path: '/api/work-history/user/3',
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        };
        
        const getResult = await makeRequest(getOptions);
        console.log(`   Status: ${getResult.statusCode}`);
        
        if (getResult.statusCode === 200 && getResult.data.success) {
            console.log('   ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
            console.log(`   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô: ${getResult.data.data.length}`);
            
            if (getResult.data.data.length > 0) {
                const workData = getResult.data.data[0];
                console.log('\n   üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:');
                console.log(`   - ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó: ${workData.company_name}`);
                console.log(`   - ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ${workData.position}`);
                console.log(`   - ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡∏°: ${workData.team_size || '‡πÑ‡∏°‡πà‡∏°‡∏µ'}`);
                console.log(`   - ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: ${workData.skills_used || '‡πÑ‡∏°‡πà‡∏°‡∏µ'}`);
                console.log(`   - ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: ${workData.technologies_used || '‡πÑ‡∏°‡πà‡∏°‡∏µ'}`);
                console.log(`   - ‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${workData.key_achievements || '‡πÑ‡∏°‡πà‡∏°‡∏µ'}`);
                
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                const hasNewFields = workData.team_size && workData.skills_used && 
                                   workData.technologies_used && workData.key_achievements;
                
                if (hasNewFields) {
                    console.log('\n   üéâ ‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß!');
                } else {
                    console.log('\n   ‚ö†Ô∏è ‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
                }
            }
        } else {
            console.log('   ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ');
            console.log('   Response:', getResult.data);
        }
        
        console.log('\nüéØ ‡∏™‡∏£‡∏∏‡∏õ: API ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡∏°‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞ API ‡πÅ‡∏•‡πâ‡∏ß');
        
    } catch (error) {
        console.error('‚ùå Error:', error.message);
    }
}

testAPI();
