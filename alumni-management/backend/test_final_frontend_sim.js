// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÅ‡∏ö‡∏ö‡∏à‡∏≥‡∏•‡∏≠‡∏á Frontend
const db = require('./db');

async function testDirectFrontendSimulation() {
    try {
        console.log('üéØ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏à‡∏≥‡∏•‡∏≠‡∏á Frontend...\n');
        
        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Frontend Form (‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤)
        const frontendFormData = {
            company_name: '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Frontend ‡∏à‡∏≥‡∏Å‡∏±‡∏î',
            position: 'Frontend Developer',
            job_description: '‡∏û‡∏±‡∏í‡∏ô‡∏≤ UI/UX ‡πÅ‡∏•‡∏∞ Frontend Application',
            start_date: '2024-02-01',
            is_current: true,
            salary_range: '40,000-55,000',
            location: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
            team_size: 6,
            skills: 'React, Vue.js, TypeScript, CSS, HTML', // ‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÅ‡∏ö‡∏ö Frontend
            technologies: 'React.js, Vue.js, Webpack, Vite, Tailwind CSS', // ‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÅ‡∏ö‡∏ö Frontend
            achievements: '‡∏û‡∏±‡∏í‡∏ô‡∏≤ Dashboard ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô 50%, ‡∏•‡∏î‡πÄ‡∏ß‡∏•‡∏≤ loading 30%' // ‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÅ‡∏ö‡∏ö Frontend
        };
        
        console.log('üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏° Frontend:');
        console.log(`- ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó: ${frontendFormData.company_name}`);
        console.log(`- ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ${frontendFormData.position}`);
        console.log(`- ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡∏°: ${frontendFormData.team_size}`);
        console.log(`- ‡∏ó‡∏±‡∏Å‡∏©‡∏∞: ${frontendFormData.skills}`);
        console.log(`- ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ: ${frontendFormData.technologies}`);
        console.log(`- ‡∏ú‡∏•‡∏á‡∏≤‡∏ô: ${frontendFormData.achievements}`);
        
        // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£ map ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Frontend (‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß)
        const mappedData = {
            user_id: 3, // ‡πÉ‡∏ä‡πâ user ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
            company_name: frontendFormData.company_name,
            position: frontendFormData.position,
            job_description: frontendFormData.job_description,
            start_date: frontendFormData.start_date,
            is_current: frontendFormData.is_current,
            salary_range: frontendFormData.salary_range,
            location: frontendFormData.location,
            team_size: frontendFormData.team_size,
            // ‡∏Å‡∏≤‡∏£ map ‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö Backend
            skills_used: frontendFormData.skills,
            technologies_used: frontendFormData.technologies,
            key_achievements: frontendFormData.achievements
        };
        
        console.log('\nüîÑ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á mapping ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Backend:');
        console.log(`- skills_used: ${mappedData.skills_used}`);
        console.log(`- technologies_used: ${mappedData.technologies_used}`);
        console.log(`- key_achievements: ${mappedData.key_achievements}`);
        
        // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏Ç‡∏≠‡∏á user ‡∏ô‡∏µ‡πâ
        await db.execute('DELETE FROM work_history WHERE user_id = ?', [mappedData.user_id]);
        console.log('\nüóëÔ∏è ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß');
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢ SQL ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô API
        const [result] = await db.execute(
            `INSERT INTO work_history 
             (user_id, company_name, position, job_description, start_date, end_date, is_current, salary_range, location, team_size, skills_used, technologies_used, key_achievements)
             VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,
            [
                mappedData.user_id,
                mappedData.company_name,
                mappedData.position,
                mappedData.job_description,
                mappedData.start_date,
                null, // end_date
                mappedData.is_current,
                mappedData.salary_range,
                mappedData.location,
                mappedData.team_size,
                mappedData.skills_used,
                mappedData.technologies_used,
                mappedData.key_achievements
            ]
        );
        
        console.log('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ID:', result.insertId);
        
        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏°‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
        const [rows] = await db.execute(
            'SELECT * FROM work_history WHERE id = ?',
            [result.insertId]
        );
        
        if (rows.length > 0) {
            const savedData = rows[0];
            console.log('\nüìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:');
            console.log(`- ID: ${savedData.id}`);
            console.log(`- ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó: ${savedData.company_name}`);
            console.log(`- ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ${savedData.position}`);
            console.log(`- ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡∏°: ${savedData.team_size}`);
            console.log(`- ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: ${savedData.skills_used}`);
            console.log(`- ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: ${savedData.technologies_used}`);
            console.log(`- ‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${savedData.key_achievements}`);
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            const fieldsCheck = {
                team_size: savedData.team_size ? '‚úÖ' : '‚ùå',
                skills_used: savedData.skills_used ? '‚úÖ' : '‚ùå',
                technologies_used: savedData.technologies_used ? '‚úÖ' : '‚ùå',
                key_achievements: savedData.key_achievements ? '‚úÖ' : '‚ùå'
            };
            
            console.log('\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡∏°‡πà:');
            Object.entries(fieldsCheck).forEach(([field, status]) => {
                console.log(`   ${field}: ${status}`);
            });
            
            const allFieldsSaved = Object.values(fieldsCheck).every(status => status === '‚úÖ');
            
            if (allFieldsSaved) {
                console.log('\nüéâ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!');
                console.log('\nüí° ‡∏™‡∏£‡∏∏‡∏õ:');
                console.log('   ‚úÖ ‡∏Å‡∏≤‡∏£ mapping ‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏ô Frontend ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
                console.log('   ‚úÖ API Backend ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏î‡πâ‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå');
                console.log('   ‚úÖ ‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á 4 ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
                console.log('\nüöÄ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô Browser ‡πÅ‡∏•‡πâ‡∏ß!');
            } else {
                console.log('\n‚ö†Ô∏è ‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å');
            }
        }
        
    } catch (error) {
        console.error('‚ùå Error:', error.message);
        console.error('Stack:', error.stack);
    } finally {
        process.exit();
    }
}

testDirectFrontendSimulation();
