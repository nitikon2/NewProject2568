// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Frontend ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Backend
const axios = require('axios');

async function testFrontendBackendIntegration() {
    try {
        console.log('üîß ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Frontend-Backend ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡∏°‡πà...\n');
        
        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏à‡∏≤‡∏Å Frontend
        const testData = {
            company_name: '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Frontend ‡∏à‡∏≥‡∏Å‡∏±‡∏î',
            position: 'Frontend Developer',
            job_description: '‡∏û‡∏±‡∏í‡∏ô‡∏≤ UI/UX ‡πÅ‡∏•‡∏∞ Frontend Application',
            start_date: '2024-02-01',
            is_current: true,
            salary_range: '40,000-55,000',
            location: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
            // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏° Frontend (‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤)
            skills: 'React, Vue.js, TypeScript, CSS, HTML',
            technologies: 'React.js, Vue.js, Webpack, Vite, Tailwind CSS',
            achievements: '‡∏û‡∏±‡∏í‡∏ô‡∏≤ Dashboard ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô 50%, ‡∏•‡∏î‡πÄ‡∏ß‡∏•‡∏≤ loading 30%',
            team_size: '6'
        };
        
        // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£ map ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô Frontend
        const mappedData = {
            ...testData,
            skills_used: testData.skills, // map skills -> skills_used
            technologies_used: testData.technologies, // map technologies -> technologies_used
            key_achievements: testData.achievements, // map achievements -> key_achievements
            // ‡∏•‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÄ‡∏Å‡πà‡∏≤‡∏≠‡∏≠‡∏Å
            skills: undefined,
            technologies: undefined,
            achievements: undefined
        };
        
        console.log('üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏õ Backend:');
        console.log(JSON.stringify(mappedData, null, 2));
        
        // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ token ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á - ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
        console.log('\nüîê ‡∏Å‡∏≥‡∏•‡∏±‡∏á login ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö token...');
        const loginResponse = await axios.post('http://localhost:5000/api/auth/login', {
            email: 'aaa@gmail.com',
            password: '123456' // ‡∏•‡∏≠‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡∏Å‡πà‡∏≠‡∏ô
        }).catch(async () => {
            // ‡∏•‡∏≠‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡∏∑‡πà‡∏ô
            return await axios.post('http://localhost:5000/api/auth/login', {
                email: 'aaa@gmail.com',
                password: 'password'
            });
        });
        
        if (!loginResponse.data.success) {
            console.log('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ login ‡πÑ‡∏î‡πâ - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
            console.log('‡∏ú‡∏•‡∏Å‡∏≤‡∏£ login:', loginResponse.data);
            return;
        }
        
        const token = loginResponse.data.token;
        console.log('‚úÖ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        
        // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏Ç‡∏≠‡∏á user ‡∏ô‡∏µ‡πâ‡∏Å‡πà‡∏≠‡∏ô
        console.log('\nüóëÔ∏è ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤...');
        const [existingData] = await axios.get('http://localhost:5000/api/work-history', {
            headers: { Authorization: `Bearer ${token}` }
        });
        
        if (existingData.data.success && existingData.data.data.length > 0) {
            for (const item of existingData.data.data) {
                await axios.delete(`http://localhost:5000/api/work-history/${item.id}`, {
                    headers: { Authorization: `Bearer ${token}` }
                });
            }
            console.log(`‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤ ${existingData.data.data.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
        }
        
        // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        console.log('\nüìù ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà...');
        const addResponse = await axios.post('http://localhost:5000/api/work-history', mappedData, {
            headers: { Authorization: `Bearer ${token}` }
        });
        
        if (addResponse.data.success) {
            console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ID:', addResponse.data.data.id);
            
            // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
            const getResponse = await axios.get(`http://localhost:5000/api/work-history/${addResponse.data.data.id}`, {
                headers: { Authorization: `Bearer ${token}` }
            });
            
            if (getResponse.data.success) {
                const savedData = getResponse.data.data;
                console.log('\nüìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:');
                console.log(`- ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó: ${savedData.company_name}`);
                console.log(`- ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ${savedData.position}`);
                console.log(`- ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡∏°: ${savedData.team_size}`);
                console.log(`- ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: ${savedData.skills_used}`);
                console.log(`- ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: ${savedData.technologies_used}`);
                console.log(`- ‡∏ú‡∏•‡∏á‡∏≤‡∏ô: ${savedData.key_achievements}`);
                
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                const missingFields = [];
                if (!savedData.team_size) missingFields.push('team_size');
                if (!savedData.skills_used) missingFields.push('skills_used');
                if (!savedData.technologies_used) missingFields.push('technologies_used');
                if (!savedData.key_achievements) missingFields.push('key_achievements');
                
                if (missingFields.length === 0) {
                    console.log('\nüéâ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!');
                    console.log('‚úÖ ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Frontend ‡πÅ‡∏•‡∏∞ Backend ‡πÑ‡∏î‡πâ‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß');
                } else {
                    console.log('\n‚ö†Ô∏è ‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:', missingFields.join(', '));
                }
            }
        } else {
            console.log('‚ùå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', addResponse.data);
        }
        
    } catch (error) {
        if (error.response) {
            console.error('‚ùå API Error:', error.response.status, error.response.data);
        } else {
            console.error('‚ùå Error:', error.message);
        }
    }
}

console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Frontend-Backend...');
testFrontendBackendIntegration();
