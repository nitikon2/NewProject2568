const mysql = require('mysql2/promise');

async function checkWorkHistoryStructure() {
    try {
        const connection = await mysql.createConnection({
            host: 'localhost',
            user: 'root',
            password: '',
            database: 'alumni_db'
        });

        console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á work_history...\n');

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        const [columns] = await connection.execute("DESCRIBE work_history");
        
        console.log('üìã ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á work_history:');
        console.log('=' .repeat(80));
        
        const addressColumns = [];
        columns.forEach((column, index) => {
            console.log(`${(index + 1).toString().padStart(2, '0')}. ${column.Field.padEnd(25)} | ${column.Type.padEnd(20)} | ${column.Null} | ${column.Default || 'NULL'}`);
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
            if (column.Field.includes('work_') && (
                column.Field.includes('province') || 
                column.Field.includes('district') || 
                column.Field.includes('subdistrict') || 
                column.Field.includes('zipcode')
            )) {
                addressColumns.push(column.Field);
            }
        });

        console.log('\nüè† ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:');
        console.log('=' .repeat(50));
        
        const requiredColumns = ['work_province', 'work_district', 'work_subdistrict', 'work_zipcode'];
        const missingColumns = [];
        
        requiredColumns.forEach(col => {
            if (addressColumns.includes(col)) {
                console.log(`‚úÖ ${col} - ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß`);
            } else {
                console.log(`‚ùå ${col} - ‡πÑ‡∏°‡πà‡∏°‡∏µ (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°)`);
                missingColumns.push(col);
            }
        });

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        console.log('\nüìä ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà:');
        const [rows] = await connection.execute(`
            SELECT COUNT(*) as total,
                   COUNT(work_province) as has_province,
                   COUNT(work_district) as has_district,
                   COUNT(work_subdistrict) as has_subdistrict,
                   COUNT(work_zipcode) as has_zipcode
            FROM work_history
        `);
        
        if (rows[0]) {
            const data = rows[0];
            console.log(`üìà ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${data.total}`);
            console.log(`üó∫Ô∏è  ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î: ${data.has_province} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
            console.log(`üèòÔ∏è  ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≥‡πÄ‡∏†‡∏≠: ${data.has_district} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
            console.log(`üè† ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≥‡∏ö‡∏•: ${data.has_subdistrict} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
            console.log(`üìÆ ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå: ${data.has_zipcode} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
        }

        // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
        console.log('\nüìã ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:');
        const [sampleData] = await connection.execute(`
            SELECT id, company_name, position, location, 
                   work_province, work_district, work_subdistrict, work_zipcode
            FROM work_history 
            WHERE work_province IS NOT NULL OR work_district IS NOT NULL 
            ORDER BY id DESC 
            LIMIT 3
        `);
        
        if (sampleData.length > 0) {
            sampleData.forEach((row, index) => {
                console.log(`\n--- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà ${index + 1} ---`);
                console.log(`ID: ${row.id} | ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó: ${row.company_name}`);
                console.log(`‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ${row.position}`);
                console.log(`‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: ${row.location || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
                console.log(`‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î: ${row.work_province || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
                console.log(`‡∏≠‡∏≥‡πÄ‡∏†‡∏≠: ${row.work_district || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
                console.log(`‡∏ï‡∏≥‡∏ö‡∏•: ${row.work_subdistrict || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
                console.log(`‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå: ${row.work_zipcode || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
            });
        } else {
            console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà');
        }

        await connection.end();
        
        return missingColumns;
        
    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
        return null;
    }
}

checkWorkHistoryStructure();